#include <stdio.h>
#include <stdlib.h>

void powerset(char list[], int n, int len);

int main(){
    char list[] = {'a', 'b', 'c', 'd'};
    int i;
    int len = sizeof(list) / sizeof(char);
    
    printf("{ ");
    
    for(i = 0; i < len; i++){
       printf("%c ", list[i]);
    }
    
    printf("}");
    
    printf("의 멱급수 출력\n\n\n");
    
    powerset(list, -1, len);
    
    getchar();
    getchar();
    
    return EXIT_SUCCESS;
}
/*
외부 링크로 첨부된 음악, 동영상은
재생이 지원되지 않습니다.

{a,b,c}라고 생각을 했을 때,

{}은 무조건 처음 출력하니 예외값으로,
두번째는 a, b, c하나씩 출력,
ab, bc, ca에서 list[i]list[i+1]로 계속해서 출력되는 것이므로 이에 대한 알고리즘 구현

powerset(list, n, len)

list : char 배열
n : 순환함수 ++ 해주는 역할
len : char 배열의 길이

*/ 
void powerset(char list[], int n, int len){
     int i, j;
     
     if(n == -1){
          printf("{} ");
          powerset(list,1,len);
     }
     else if(n == 1){
          for(i = 0; i < len; i++){
                printf("%c ", list[i]);
          }
          powerset(list,n+1,len);
     }
     /*else if(n == 2){
          for(i = 0; i < len; i++){
              
              printf("%c", list[i]);
              printf("%c", list[(i+1)%len;]);
              
              printf(" ");
          }
          
          powerset(list,n+1,len);
     }*/
     else if(n == len){
          for(i = 0; i < len; i++){
                printf("%c", list[i]);
          }
          
          printf("\n");
     }
     else{
          for(i = 0; i < len; i++){
                for(j = 0; j < n; j++){
                      printf("%c", list[(i+j)%len]);
                }
                printf(" ");
          }
          
          powerset(list,n+1,len);
     }
}
